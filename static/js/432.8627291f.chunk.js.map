{"version":3,"file":"static/js/432.8627291f.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAGKF,EAAAA,EAAAA,IAAA,qCAAwCC,IAH7C,uBAEKE,EAFL,EAEHC,KAAQD,QAFL,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACEL,EADF,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,yFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACUL,EADV,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,yFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACUL,EADV,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCC,EAAS,CACbA,OAAQ,CACNC,QAASX,EACTY,SAAU,UAJT,SAOkBb,EAAAA,EAAAA,IAAA,6BAAgCU,GAASC,GAP3D,uBAOGP,EAPH,EAOGA,KAPH,kBAQEA,GARF,kE,yFCtBMU,EAAMC,EAAAA,GAAAA,IAAH,wEACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,qEChBSC,EAAe,kBAC1BC,EAAAA,GAAAA,MAAY,yCAA0C,CACpDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SATiB,C,wKCCfC,EAA2BnB,EAAAA,GAAAA,GAAH,+CAIxBoB,EAAQpB,EAAAA,GAAAA,IAAH,+DAKLqB,GAAarB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,4F,6BCHVuB,EAAqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7BC,GAAWC,EAAAA,EAAAA,MACTnC,EAA2BiC,EAA3BjC,GAAIoC,EAAuBH,EAAvBG,YAAaC,EAAUJ,EAAVI,MAEzB,OACE,SAACT,EAAD,WACE,UAACE,EAAD,CAAYQ,GAAE,iBAAYtC,GAAMuC,MAAO,CAAEC,KAAMN,GAA/C,UACGE,GACC,SAACP,EAAD,CACEY,IAAG,0CAAqCL,GACxCM,IAAG,iBAAYL,MAGjB,SAACR,EAAD,CAAOY,IAAKE,EAAaD,IAAI,gBAE9BL,MAV0BrC,EAclC,EC1BY4C,EAAqBnC,EAAAA,GAAAA,GAAH,8CCElBoC,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/B,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,SAAAd,GAAK,OACf,SAACD,EAAD,CAAoBC,MAAOA,GAAYA,EAAMjC,GAD9B,KAKtB,E,6BCwBD,EA7Ba,WACX,OAA4CgD,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBF,GAAa,GAFS,UAGDxD,EAAAA,EAAAA,MAHC,OAGhBkD,EAHgB,OAItBI,EAAkBJ,GAJI,iDAMtB7B,EAAAA,EAAAA,KANsB,yBAQtBmC,GAAa,GARS,4EAAH,qDAYvBE,GACD,GAAE,KAGD,UAAC9C,EAAA,EAAD,CAAK+C,YAAY,OAAOC,aAAa,OAAOC,WAAW,OAAvD,WACE,4CACA,SAACZ,EAAD,CAAgBC,OAAQG,IACvBE,IAAa,SAACO,EAAA,EAAD,MAGnB,C","sources":["components/API.js","components/Box.jsx","components/ErrorMessage/errorMessage.js","components/TrendingMoviesItem/TrendingMoviesItem.styled.js","components/TrendingMoviesItem/TrendingMoviesItem.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3820fb012ec124360c2ca0b092d22f88';\n\nexport async function fetchTrendingMovies() {\n  const {\n    data: { results },\n  } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return results;\n}\n\nexport async function fetchMovieById(id) {\n  const { data } = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchActorsById(id) {\n  const { data } = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchReviewsById(id) {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchSearchMovie(query) {\n  const params = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const { data } = await axios.get(`search/movie?query=${query}`, params);\n  return data;\n}\n","import styled from 'styled-components';\nimport {\n  space,\n  layout,\n  typography,\n  color,\n  shadow,\n  border,\n  flexbox,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${layout}\n  ${typography}\n  ${color}\n  ${shadow}\n  ${border}\n  ${flexbox}\n`;\n","import { toast } from 'react-toastify';\n\nexport const errorMessage = () =>\n  toast.error('Something went wrong. Please try again', {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingMoviesStyledItem = styled.li`\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 50px;\n  margin-right: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  TrendingMoviesStyledItem,\n  Image,\n  StyledLink,\n} from './TrendingMoviesItem.styled';\nimport placeholder from '../../images/coverPlaceholder.jpg';\nimport { useLocation } from 'react-router-dom';\n\nexport const TrendingMoviesItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, title } = movie;\n\n  return (\n    <TrendingMoviesStyledItem key={id}>\n      <StyledLink to={`movies/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <Image\n            src={`https://image.tmdb.org/t/p/w200/${poster_path}`}\n            alt={`poster ${title}`}\n          ></Image>\n        ) : (\n          <Image src={placeholder} alt=\"placeholder\"></Image>\n        )}\n        {title}\n      </StyledLink>\n    </TrendingMoviesStyledItem>\n  );\n};\n\nTrendingMoviesItem.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TrendingMoviesList = styled.ul`\n  padding: 10px 0px;\n`;\n","import PropTypes from 'prop-types';\nimport { TrendingMoviesItem } from 'components/TrendingMoviesItem';\nimport { TrendingMoviesList } from './TrendingMovies.styled';\n\nexport const TrendingMovies = ({ movies }) => {\n  return (\n    <TrendingMoviesList>\n      {movies.map(movie => (\n        <TrendingMoviesItem movie={movie} key={movie.id} />\n      ))}\n    </TrendingMoviesList>\n  );\n};\n\nTrendingMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { fetchTrendingMovies } from '../components/API';\nimport { useState, useEffect } from 'react';\nimport { TrendingMovies } from 'components/TrendingMovies';\nimport { Loader } from '../components/Loader';\nimport { errorMessage } from '../components/ErrorMessage';\nimport { Box } from 'components/Box';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch {\n        errorMessage();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <Box paddingLeft=\"16px\" paddingRight=\"16px\" paddingTop=\"10px\">\n      <h2>Trending today</h2>\n      <TrendingMovies movies={trendingMovies} />\n      {isLoading && <Loader />}\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","fetchTrendingMovies","results","data","fetchMovieById","id","fetchActorsById","fetchReviewsById","fetchSearchMovie","query","params","api_key","language","Box","styled","space","layout","typography","color","shadow","border","flexbox","errorMessage","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","TrendingMoviesStyledItem","Image","StyledLink","Link","TrendingMoviesItem","movie","location","useLocation","poster_path","title","to","state","from","src","alt","placeholder","TrendingMoviesList","TrendingMovies","movies","map","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","paddingLeft","paddingRight","paddingTop","Loader"],"sourceRoot":""}