{"version":3,"file":"static/js/847.438820c9.chunk.js","mappings":"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","sources":["components/Box.jsx","components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/API.js","services/ErrorMessage/errorMessage.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  space,\n  layout,\n  typography,\n  color,\n  shadow,\n  border,\n  flexbox,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${layout}\n  ${typography}\n  ${color}\n  ${shadow}\n  ${border}\n  ${flexbox}\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  margin-bottom: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 50px;\n  margin-right: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { StyledLink, Image } from './MoviesListItem.styled';\nimport placeholder from '../../images/coverPlaceholder.jpg';\n\nexport const MoviesListItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, title } = movie;\n  const src = `https://image.tmdb.org/t/p/w200/${poster_path}`;\n  const alt = `poster ${title}`;\n\n  return (\n    <li key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <Image src={src} alt={alt} />\n        ) : (\n          <Image src={placeholder} alt=\"placeholder\" />\n        )}\n        {title}\n      </StyledLink>\n    </li>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  padding: 10px 16px;\n`;\n","import { MoviesListItem } from '../MoviesListItem';\nimport { MoviesListStyled } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(movie => (\n        <MoviesListItem movie={movie} key={movie.id} />\n      ))}\n    </MoviesListStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  ::after {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n`;\n\nexport const SearchFormIcon = styled(FcSearch)`\n  width: 35px;\n  height: 35px;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding: 0 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormIcon,\n  SearchFormInput,\n} from './Searchbar.styled';\nimport { Box } from 'components/Box';\n\nexport const Searchbar = ({ valueQuery, onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = event => {\n    const { value } = event.target;\n    setQuery(value);\n  };\n\n  const reset = () => {\n    setQuery('');\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n    reset();\n  };\n\n  return (\n    <Box\n      backgroundColor=\"#3f51b5\"\n      padding=\"0px 16px 12px\"\n      margin=\"0 auto\"\n      width=\"100%\"\n    >\n      <SearchForm onSubmit={onHandleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel>\n            <SearchFormIcon />\n          </SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          name=\"query\"\n          value={query}\n          onChange={onChange}\n        />\n      </SearchForm>\n    </Box>\n  );\n};\n\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from '../components/Searchbar';\nimport { fetchSearchMovie } from '../services/API';\nimport { errorMessage } from '../services/ErrorMessage';\nimport { Box } from 'components/Box';\nimport { Loader } from '../components/Loader';\nimport { MoviesList } from '../components/MoviesList';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const [searchQuery, setSearchQuery] = useState(() =>\n  //   searchParams.get('query')\n  // );\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const getImages = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchSearchMovie(searchQuery);\n        setSearchedMovies(movies.results);\n      } catch {\n        errorMessage();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getImages();\n  }, [searchQuery]);\n\n  const onSubmitSearch = query => {\n    // setSearchQuery(query);\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Box>\n      <Searchbar onSubmit={onSubmitSearch} />\n      {searchedMovies.length > 0 && <MoviesList movies={searchedMovies} />}\n      {isLoading && <Loader />}\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3820fb012ec124360c2ca0b092d22f88';\n\nexport async function fetchTrendingMovies() {\n  const {\n    data: { results },\n  } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return results;\n}\n\nexport async function fetchMovieById(id) {\n  const { data } = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchActorsById(id) {\n  const { data } = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchReviewsById(id) {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchSearchMovie(query) {\n  const params = {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const { data } = await axios.get(`search/movie?query=${query}`, params);\n  return data;\n}\n","import { toast } from 'react-toastify';\n\nexport const errorMessage = () =>\n  toast.error('Something went wrong. Please try again', {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n"],"names":["Box","styled","space","layout","typography","color","shadow","border","flexbox","StyledLink","Link","Image","MoviesListItem","movie","location","useLocation","id","poster_path","title","src","alt","to","state","from","placeholder","MoviesListStyled","MoviesList","movies","map","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormIcon","FcSearch","SearchFormInput","Searchbar","valueQuery","onSubmit","useState","query","setQuery","backgroundColor","padding","margin","width","event","preventDefault","type","autoComplete","autoFocus","name","value","onChange","target","searchedMovies","setSearchedMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getImages","fetchSearchMovie","results","errorMessage","length","Loader","axios","API_KEY","fetchTrendingMovies","data","fetchMovieById","fetchActorsById","fetchReviewsById","params","api_key","language","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}